local localKeybinds = Instance.new("Folder",workspace)
localKeybinds.Name = "local Keybinds"
wait(0.5)
game.workspace["local Keybinds"].Archivable = false
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Bennett Scripts X MBSH | The Vampire Origins", "GrapeTheme")
local Bennett = Window:NewTab("Keybinds")
local BennettSection = Bennett:NewSection("Keybinds")

BennettSection:NewToggle("Keybinds On/Off", "", function(state)
    if state == true then
        game.workspace["local Keybinds"].Archivable = true
    else
        game.workspace["local Keybinds"].Archivable = false
    end
end)

BennettSection:NewKeybind("Kill (must have salt)", "",Enum.KeyCode.L, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

 -- Script generated by Bennett Spy - discord: bennettscripts
bennettscripts = {
    [1] = player.Character.Head
}

game:GetService("Players").LocalPlayer.Backpack.Salt.Event:FireServer(unpack(bennettscripts))
                                    
        end
    end
end)

BennettSection:NewKeybind("Combo", "",Enum.KeyCode.E, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

          local args = {
                [1] = "corporis impetu",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
  
wait(0.4)
         local args = {
                [1] = "incendia",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

         local args = {
                [1] = "lucendi",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
            local args = {
                [1] = "errox femus",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

			local args = {
                [1] = "corporis impetu",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

			local args = {
                [1] = "incendia",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))

            local args = {
                [1] = "suffuco",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
            



                                    
        end
    end
end)

BennettSection:NewKeybind("Delfan Eoten Cor", "",Enum.KeyCode.Z, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

            local args = {
                [1] = "delfan eoten cor",
                [2] = player.Character,
                [3] = CFrame.new(398.7474670410156, 10.13139820098877, 269.7151184082031, 0.999862015247345, -0.003389145014807582, 0.01626567728817463, 2.0190227267846694e-10, 0.9789749383926392, 0.20398089289665222, -0.016615010797977448, -0.20395274460315704, 0.9788397550582886),
                [4] = player.Character.UpperTorso
            }
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
                                    
        end
    end
end)

BennettSection:NewKeybind("Ressurect spell (basic)", "",Enum.KeyCode.Five, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "sanguine infudare corra",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Ad Somnum", "",Enum.KeyCode.J, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "ad somnum",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Ossox", "",Enum.KeyCode.U, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "ossox",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)


BennettSection:NewKeybind("Sanitatem", "",Enum.KeyCode.Four, function()
    if game.workspace["local Keybinds"].Archivable == true then
    local function getPlayer()
            local userInput = game:GetService("UserInputService")
            local cam = workspace.CurrentCamera
            local mousePos = userInput:GetMouseLocation()
            local mouseRay = cam:ViewportPointToRay(mousePos.X, mousePos.Y)
            players = {}
            for _, x in next, game:GetService('Players'):GetPlayers() do
                players[#players + 1] = x.Character
            end
            local raycastParams = RaycastParams.new()
            raycastParams.FilterType = Enum.RaycastFilterType.Whitelist
            raycastParams.FilterDescendantsInstances = players
            raycastParams.IgnoreWater = true
            local raycastResult = workspace:Raycast(mouseRay.Origin, mouseRay.Direction * 1000, raycastParams)
            if raycastResult then
                for _, x in next, game:GetService('Players'):GetPlayers() do
                    if not raycastResult.Instance:IsDescendantOf(x.Character) then
                        continue 
                    end
                    return x
                end
            end
            return false
        end
        local function Set(list)
            local set = {}
            for _, l in ipairs(list) do
                if l then
                    set[l] = true
                end
            end
            return set
        end
        if IsTyping then return end
        local player = getPlayer()
        if player then
            local pos = player.Character.HumanoidRootPart.CFrame

local args = {
    [1] = "sanitatem",
    [2] = player.Character,
    [3] = CFrame.new(335.3482666015625, 10.283612251281738, 841.7147827148438, 0.9970464110374451, 0.018316147848963737, -0.07458620518445969, -7.462174211880779e-10, 0.9711463451385498, 0.23848454654216766, 0.07680223882198334, -0.23778016865253448, 0.9682778716087341),
    [4] = player.character.UpperTorso
}

game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Action"):WaitForChild("SpellEvent"):FireServer(unpack(args))
              
        end
    end
end)

BennettSection:NewKeybind("Invisique", "",Enum.KeyCode.P, funct
